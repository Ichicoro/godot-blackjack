[gd_scene load_steps=10 format=2]

[ext_resource path="res://assets/big_font.tres" type="DynamicFont" id=1]
[ext_resource path="res://assets/buttons/exit_button.png" type="Texture" id=2]
[ext_resource path="res://assets/table_font.tres" type="DynamicFont" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Control
tool

signal quit_pressed

export var exit_button_enabled: bool = true setget set_exit_button_enabled
export var clock_enabled: bool = true setget set_clock_enabled

func _ready():
	pass


func set_exit_button_enabled(value):
	exit_button_enabled = value
	if exit_button_enabled:
		$Panel/TextureButton.show()
	else:
		$Panel/TextureButton.hide()


func set_clock_enabled(value):
	clock_enabled = value
	if clock_enabled:
		$Panel/ClockLabel.show()
	else:
		$Panel/ClockLabel.hide()


func _on_Exit_pressed():
	emit_signal(\"quit_pressed\")
"

[sub_resource type="StyleBoxFlat" id=2]
bg_color = Color( 0.133333, 0.133333, 0.133333, 1 )
border_width_bottom = 4
border_color = Color( 0.184314, 0.184314, 0.184314, 1 )

[sub_resource type="GDScript" id=3]
script/source = "extends RichTextLabel

const credit_template = \"[right][color=green]$[/color]%s[/right]\"

func _ready():
	update_credit(UserData.credit)
	UserData.connect(\"credit_changed\", self, \"update_credit\")

func update_credit(new_credit):
	self.bbcode_text = credit_template % str(new_credit)
"

[sub_resource type="GDScript" id=4]
script/source = "extends TextureButton

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


func _on_TextureButton_pressed():
	pass


func _on_TextureButton_button_down():
	self.modulate = Color(1,1,1,0.7)


func _on_TextureButton_button_up():
	self.modulate = Color(1,1,1,1)
"

[sub_resource type="GDScript" id=5]
script/source = "extends Label
tool

func _ready():
	set_time()

func _process(delta):
	set_time()


func set_time():
	var time = OS.get_time()
	var hour = \"%d\" % time.hour if time.hour >= 10 else \"0%d\"%time.hour
	var minutes = \"%d\" % time.minute if time.minute >= 10 else \"0%d\"%time.minute
	self.text = \"%s:%s\" % [hour, minutes]
"

[sub_resource type="StyleBoxFlat" id=6]
bg_color = Color( 0.133333, 0.133333, 0.133333, 1 )
border_color = Color( 0.184314, 0.184314, 0.184314, 1 )

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 0.092
margin_bottom = -0.104004
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="."]
anchor_right = 1.0
margin_bottom = 47.0
custom_styles/panel = SubResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RichTextLabel" type="RichTextLabel" parent="Panel"]
anchor_bottom = 1.0
margin_left = 276.0
margin_top = 12.0
margin_right = 422.0
margin_bottom = -9.0
custom_fonts/normal_font = ExtResource( 1 )
bbcode_enabled = true
bbcode_text = "[right][color=green]$[/color]400[/right]"
text = "$400"
script = SubResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureButton" type="TextureButton" parent="Panel"]
margin_left = 6.0
margin_top = 6.0
margin_right = 22.0
margin_bottom = 22.0
rect_scale = Vector2( 2, 2 )
texture_normal = ExtResource( 2 )
script = SubResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ClockLabel" type="Label" parent="Panel"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -40.0
margin_top = -12.5
margin_right = 40.0
margin_bottom = 12.5
grow_horizontal = 2
grow_vertical = 2
custom_fonts/font = ExtResource( 3 )
text = "21:14"
align = 1
valign = 1
script = SubResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel2" type="Panel" parent="."]
anchor_right = 1.0
margin_top = -65.0
custom_styles/panel = SubResource( 6 )
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="button_down" from="Panel/TextureButton" to="Panel/TextureButton" method="_on_TextureButton_button_down"]
[connection signal="button_up" from="Panel/TextureButton" to="Panel/TextureButton" method="_on_TextureButton_button_up"]
[connection signal="pressed" from="Panel/TextureButton" to="." method="_on_Exit_pressed"]
[connection signal="pressed" from="Panel/TextureButton" to="Panel/TextureButton" method="_on_TextureButton_pressed"]
